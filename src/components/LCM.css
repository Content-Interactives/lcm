/* Non Animation Styles */
.inputs {
    width: 3.5rem;
    height: 3.5rem;
    text-align: center;
    background: transparent;
    border: 2px solid #9ca3af;
    border-radius: 4px;
    outline: none;
    font-size: 2.25rem;
    font-weight: bold;
    color: #5750E3;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: textfield;
}

/* Specific animation rules for inputs */
.inputs.shrink-out-animation {
    transform-origin: center !important;
    animation: shrinkOutAnimation 0.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards !important;
}

.inputs.grow-in-animation {
    transform-origin: center !important;
    animation: growInAnimation 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) forwards !important;
}

.left-container,
.right-container {
  position: absolute;
  top: 0;
  height: 100%;
  width: 50%;
}

.left-container {
  left: 0;
}

.right-container {
  right: 0;
}

/* Animation Styles */
/* General Animations */
.fade-in-up-tr-animation {
    animation: fadeInUpTrAnimation 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
}

.fade-out-down-tr-animation {
	animation: fadeOutDownTrAnimation 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
}

.shrink-out-tr-animation {
	animation: shrinkOutTrAnimation 1s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
}

@keyframes fadeInUpTrAnimation {
	from {
        opacity: 0;
        transform: translate(-50%, 10px);
    }
    to {
        opacity: 1;
        transform: translate(-50%, 0);
    }
}

@keyframes fadeOutDownTrAnimation {
	from {
		opacity: 1;
		transform: translate(-50%, 0);
	}
	to {
		opacity: 0;
		transform: translate(-50%, 10px);
	}
}

@keyframes shrinkOutTrAnimation {
	from {
		opacity: 1;
		transform: scale(1) translateX(-50%);
        left: 50%;
	}
	to {
		opacity: 0;
		transform: scale(0) translateX(-50%);
        left: 0%;
        top: 0%;
	}
}

/* Intro -> Step 1 Animations */
.move-12-and-18-animation {
	animation: move12And18Animation 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

@keyframes move12And18Animation {
	from {
		transform: translateX(-50%);
        top: 20%;
	}
	to {
		transform: translateX(-50%);
        top: 10%;
	}
}

/* Step 1 -> Step 2 Animations */
.left-line {
    transform: translateX(-50%) rotate(30deg) !important;
}

.right-line {
    transform: translateX(-50%) rotate(-30deg) !important;
}

.factor-tree-line {
    position: absolute;
    width: 2px;
    background-color: #5750E3;
    transform-origin: top center;
    height: 40px;
}

/* Dynamic tree line animations */
.dynamic-line-appear {
    animation: dynamicLineAppear 0.3s ease-out forwards;
}

@keyframes dynamicLineAppear {
    from {
        opacity: 0;
        transform: scaleY(0);
    }
    to {
        opacity: 1;
        transform: scaleY(1);
    }
}

.shrink-out-line {
    animation: shrinkOutLine 0.8s ease-out forwards;
}

@keyframes shrinkOutLine {
    from {
        opacity: 1;
        transform: scaleY(1);
    }
    to {
        opacity: 0;
        transform: scaleY(0);
    }
}

#non-prime-fade {
    opacity: 0.5 !important;
    transition: opacity 0.3s ease;
}

#non-prime-remove-animation {
    animation: nonPrimeRemoveAnimation 0.3s ease-out forwards;
}

@keyframes nonPrimeRemoveAnimation {
    from {
        opacity: 0.5;
    }
    to {
        opacity: 0;
    }
}

#remove-left-line {
    animation: removeLeftLineAnimation 0.3s ease-out forwards;
}

#remove-right-line {
    animation: removeRightLineAnimation 0.3s ease-out forwards;
}

@keyframes removeLeftLineAnimation {
    from {
        transform: scale(1);
        opacity: 1;
        transform: translateX(-50%) rotate(30deg);
    }
    to {
        transform: scale(0);
        opacity: 0;
        transform: translateX(-50%) rotate(30deg);
    }
}

@keyframes removeRightLineAnimation {
    from {
        transform: scale(1);
        opacity: 1;
        transform: translateX(-50%) rotate(-30deg);
    }
    to {
        transform: scale(0);
        opacity: 0;
        transform: translateX(-50%) rotate(-30deg);
    }
}

.static-tree-line {
    animation: staticTreeLineAppear 0.3s ease-out forwards;
}

.static-tree-node {
    animation: staticTreeNodeAppear 0.3s ease-out forwards;
}

@keyframes staticTreeLineAppear {
    from {
        opacity: 0;
        transform: scaleY(0);
    }
    to {
        opacity: 1;
        transform: scaleY(1);
    }
}

@keyframes staticTreeNodeAppear {
    from {
        opacity: 0;
        transform: scale(0.5);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Step 2 -> Step 3 Animations */
.move-static-first-layer-2s {
    animation: moveStaticFirstLayer2sAnimation 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

.move-static-second-layer-2s {
    animation: moveStaticSecondLayer2sAnimation 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

.move-static-second-layer-3s {
    animation: moveStaticSecondLayer3sAnimation 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

@keyframes moveStaticFirstLayer2sAnimation {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(-100%, -50%);
    }
}

@keyframes moveStaticSecondLayer2sAnimation {
    from {
        transform: translate(-0, 0);
    }
    to {
        transform: translate(20%, -259%);
    }
}

@keyframes moveStaticSecondLayer3sAnimation {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(-50%, -259%);
    }
}

.left-converging-line {
    transform: rotate(30deg) !important;
}

.right-converging-line {
    transform: rotate(-30deg) translate(-1700%, -52%) !important;
}

/* Step 3 -> Step 4 Animations */
#fade-out-expression-first-layer-2s {
    animation: fadeOutExpressionFirstLayer2sAnimation 0.2s ease-out forwards;
}

.fade-out-expression-second-layer-2s {
    animation: fadeOutExpressionSecondLayer2sAnimation 0.2s ease-out forwards;
}

.fade-out-expression-second-layer-3s {
    animation: fadeOutExpressionSecondLayer3sAnimation 0.2s ease-out forwards;
}

@keyframes fadeOutExpressionFirstLayer2sAnimation {
    from {
        opacity: 1;
        transform: translate(-100%, -50%) scale(1);
    }
    to {
        opacity: 0;
        transform: translate(-100%, -50%) scale(0);
    }
}

@keyframes fadeOutExpressionSecondLayer2sAnimation {
    from {
        opacity: 1;
        transform: translate(20%, -259%) scale(1);
    }
    to {
        opacity: 0;
        transform: translate(20%, -259%) scale(0);
    }
}

@keyframes fadeOutExpressionSecondLayer3sAnimation {
    from {
        opacity: 1;
        transform: translate(-50%, -259%) scale(1);
    }
    to {
        opacity: 0;
        transform: translate(-50%, -259%) scale(0);
    }
}

.move-powers-expression {
    animation: movePowersExpressionAnimation 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

@keyframes movePowersExpressionAnimation {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(0, -250%);
    }
}

@media (max-width: 370px) {
    .powers-expression-font-size {
        font-size: 1.2rem;
    }
}

@media (max-width: 310px) {
    .powers-expression-font-size {
        font-size: 1rem;
    }
}

/* Step 4 -> Solving Step Animations */
.fade-out-power-expression-elements {
    animation: fadeOutPowerExpressionElements 0.3s forwards;
}

@keyframes fadeOutPowerExpressionElements {
    from {
        opacity: 1;
        transform: translate(0, -250%);
    }
    to {
        opacity: 0;
        transform: translate(0, -230%);
    }
}

.shrink-out-initial-12-and-18 {
    animation: shrinkOutInitial12And18Animation 0.3s ease-out forwards;
}

@keyframes shrinkOutInitial12And18Animation {
    from {
        opacity: 1;
        transform: scale(1) translateX(-50%);
        top: 10%;
    }
    to {
        opacity: 0;
        transform: scale(0) translateX(-50%);
        top: 10%;
    }
}
